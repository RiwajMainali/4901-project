{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\nvar BottomTab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Tab One',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: 'Tab Two',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"sources":["H:/inVintori/in.Vintori/navigation/index.tsx"],"sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName, Pressable } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport ModalScreen from '../screens/ModalScreen';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport TabOneScreen from '../screens/TabOneScreen';\r\nimport TabTwoScreen from '../screens/TabTwoScreen';\r\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\r\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"TabOne\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}>\r\n      <BottomTab.Screen\r\n        name=\"TabOne\"\r\n        component={TabOneScreen}\r\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\r\n          title: 'Tab One',\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\r\n          headerRight: () => (\r\n            <Pressable\r\n              onPress={() => navigation.navigate('Modal')}\r\n              style={({ pressed }) => ({\r\n                opacity: pressed ? 0.5 : 1,\r\n              })}>\r\n              <FontAwesome\r\n                name=\"info-circle\"\r\n                size={25}\r\n                color={Colors[colorScheme].text}\r\n                style={{ marginRight: 15 }}\r\n              />\r\n            </Pressable>\r\n          ),\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"TabTwo\"\r\n        component={TabTwoScreen}\r\n        options={{\r\n          title: 'Tab Two',\r\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>['name'];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}